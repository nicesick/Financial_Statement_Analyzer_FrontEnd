[{"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\index.js":"1","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\App.js":"2","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\reducer\\RootReducer.js":"3","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\reducer\\UpdateReducer.js":"4","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\reducer\\ResultReducer.js":"5","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\reducer\\SearchReducer.js":"6","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\nav\\Nav.js":"7","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\analyzer\\Analyzer.js":"8","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\guide\\Guide.js":"9","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\search\\Search.js":"10","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\actions\\UpdateActions.js":"11","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\actions\\CorpDetailActions.js":"12","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\nav\\NavUpdateTime.js":"13","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\actions\\CorpActions.js":"14","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\nav\\NavItem.js":"15","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\analyzer\\AnalyzerSearch.js":"16","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\analyzer\\AnalyzerResult.js":"17","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\search\\SearchContent.js":"18","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\constants\\Constants.js":"19","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\search\\SearchResult.js":"20","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\analyzer\\AnalyzerResultLineChart.js":"21","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\analyzer\\AnalyzerTable.js":"22","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\analyzer\\AnalyzerResultBarChart.js":"23","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\search\\SearchButton.js":"24","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\search\\SearchItem.js":"25","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\search\\SearchResultItem.js":"26","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\utils\\RandomRgba.js":"27","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\slice\\SearchSlice.js":"28","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\slice\\UpdateSlice.js":"29","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\slice\\AnalyzeSlice.js":"30"},{"size":652,"mtime":1613483927946,"results":"31","hashOfConfig":"32"},{"size":1208,"mtime":1613569956202,"results":"33","hashOfConfig":"32"},{"size":511,"mtime":1613569058043,"results":"34","hashOfConfig":"32"},{"size":982,"mtime":1611931830483,"results":"35","hashOfConfig":"32"},{"size":828,"mtime":1611931830480,"results":"36","hashOfConfig":"32"},{"size":806,"mtime":1611931830482,"results":"37","hashOfConfig":"32"},{"size":2283,"mtime":1613649329051,"results":"38","hashOfConfig":"32"},{"size":1996,"mtime":1613570175179,"results":"39","hashOfConfig":"32"},{"size":220,"mtime":1611931830471,"results":"40","hashOfConfig":"32"},{"size":584,"mtime":1613482864471,"results":"41","hashOfConfig":"32"},{"size":638,"mtime":1611931830464,"results":"42","hashOfConfig":"32"},{"size":722,"mtime":1611931830464,"results":"43","hashOfConfig":"32"},{"size":2424,"mtime":1613568061676,"results":"44","hashOfConfig":"32"},{"size":652,"mtime":1611931830463,"results":"45","hashOfConfig":"32"},{"size":1205,"mtime":1613565290026,"results":"46","hashOfConfig":"32"},{"size":277,"mtime":1611931830470,"results":"47","hashOfConfig":"32"},{"size":10873,"mtime":1614004315524,"results":"48","hashOfConfig":"32"},{"size":5020,"mtime":1613658957587,"results":"49","hashOfConfig":"32"},{"size":293,"mtime":1614001055993,"results":"50","hashOfConfig":"32"},{"size":1897,"mtime":1614084777780,"results":"51","hashOfConfig":"32"},{"size":1471,"mtime":1611931830469,"results":"52","hashOfConfig":"32"},{"size":1570,"mtime":1614083454749,"results":"53","hashOfConfig":"32"},{"size":1467,"mtime":1611931830468,"results":"54","hashOfConfig":"32"},{"size":396,"mtime":1613397975675,"results":"55","hashOfConfig":"32"},{"size":1146,"mtime":1611931830476,"results":"56","hashOfConfig":"32"},{"size":627,"mtime":1612794205466,"results":"57","hashOfConfig":"32"},{"size":222,"mtime":1611931830484,"results":"58","hashOfConfig":"32"},{"size":3460,"mtime":1613996157272,"results":"59","hashOfConfig":"32"},{"size":2657,"mtime":1613656294414,"results":"60","hashOfConfig":"32"},{"size":1313,"mtime":1613569031310,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"etwoni",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\index.js",["131","132"],"import ReactDOM         from 'react-dom'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport RootReducer      from './reducer/RootReducer'\r\nimport App              from './App'\r\n\r\n// const store = createStore(RootReducer, applyMiddleware(logger))\r\nconst store = configureStore({\r\n    reducer: RootReducer,\r\n    middleware: [logger, reduxThunk]\r\n});\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root')\r\n);",["133","134"],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\App.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\reducer\\RootReducer.js",["135","136","137","138","139","140"],"import { combineReducers } from 'redux'\r\n\r\nimport { isCorpInfosRequested, corpInfos }      from './SearchReducer'\r\nimport { isCorpDetailRequested, corpDetail }    from './ResultReducer'\r\nimport { isUpdateRequested, updateTime }        from './UpdateReducer'\r\n\r\nimport search from '../slice/SearchSlice'\r\nimport update from '../slice/UpdateSlice'\r\nimport analyze from '../slice/AnalyzeSlice'\r\n\r\nconst RootReducer = combineReducers({\r\n      search,\r\n      update,\r\n      analyze\r\n});\r\n\r\nexport default RootReducer","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\reducer\\UpdateReducer.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\reducer\\ResultReducer.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\reducer\\SearchReducer.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\nav\\Nav.js",["141","142","143","144","145","146"],"import React, { useEffect }   from 'react'\r\nimport axios        from 'axios'\r\nimport { connect }  from 'react-redux'\r\n\r\nimport { Grid }     from '@material-ui/core'\r\n\r\nimport { ENDPOINTS }    from '../../constants/Constants'\r\nimport { requestUpdate, responseUpdate, getSuccessedUpdate, getFailedUpdate } from '../../actions/UpdateActions'\r\n\r\nimport NavItem          from './NavItem'\r\nimport NavUpdateTime    from './NavUpdateTime'\r\nimport AnalyzerSearch   from '../analyzer/AnalyzerSearch'\r\n\r\nimport { updateGetThunk } from '../../slice/UpdateSlice'\r\n\r\nconst Nav = props => {\r\n    const { dispatch } = props;\r\n\r\n    useEffect(() => {\r\n        dispatch(updateGetThunk());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            {/* {navs.map((nav, index) => {\r\n                return <NavItem key={index} {...this.props} name={nav.name} href={nav.link} onUpdate={this.onUpdate}/>\r\n            })} */}\r\n            <NavItem name='Guide' href='/guide' />\r\n            <NavItem name='Search' href='/search' />\r\n            <NavItem name='Update' href='/update' />\r\n    \r\n            <NavUpdateTime {...props.update} />\r\n            <AnalyzerSearch {...props.search} />\r\n        </Grid>\r\n    );\r\n}\r\n\r\n// class Nav extends React.Component {\r\n//     render() {\r\n//         // const navs = [\r\n//         //     {name : 'Guide' , link : '/guide'},\r\n//         //     {name : 'Search', link : '/search'},\r\n//         //     {name : 'Update', link : '/update'}\r\n//         // ];\r\n//         return (\r\n//             <Grid container spacing={1}>\r\n//                 {/* {navs.map((nav, index) => {\r\n//                     return <NavItem key={index} {...this.props} name={nav.name} href={nav.link} onUpdate={this.onUpdate}/>\r\n//                 })} */}\r\n//                 <NavItem name='Guide' href='/guide' />\r\n//                 <NavItem name='Search' href='/search' />\r\n//                 <NavItem name='Update' href='/update' />\r\n\r\n//                 <NavUpdateTime />\r\n//                 {/* <AnalyzerSearch {...this.props} /> */}\r\n//             </Grid>\r\n//         );\r\n//     }\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        update: state.update,\r\n        search: state.search\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Nav)","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\analyzer\\Analyzer.js",["147","148","149","150","151","152"],"import React        from 'react'\r\nimport { connect }  from 'react-redux'\r\nimport axios        from 'axios'\r\n\r\nimport { Grid }     from '@material-ui/core'\r\n\r\nimport { ENDPOINTS } from '../../constants/Constants'\r\nimport { requestCorpDetail, responseCorpDetail, getSuccessedCorpDetail, getFailedCorpDetail } from '../../actions/CorpDetailActions'\r\n\r\nimport AnalyzerResult from './AnalyzerResult'\r\n\r\nclass Analyzer extends React.Component {\r\n    // componentDidMount() {\r\n    //     const { dispatch, corpCode } = this.props;\r\n    //     getCorpDetail(dispatch, corpCode);\r\n    // }\r\n\r\n    // shouldComponentUpdate(newProps, newState) {\r\n    //     if (Object.keys(newProps.corpDetail).length > 0\r\n    //         && (newProps.isCorpDetailRequested === false \r\n    //         && newProps.corpCode !== newProps.corpDetail.corp_code)\r\n    //     ) {\r\n    //         const { dispatch, corpCode } = newProps;\r\n    //         getCorpDetail(dispatch, corpCode);\r\n\r\n    //         return false;\r\n    //     }\r\n\r\n    //     return true;\r\n    // }\r\n\r\n    // componentDidUpdate(newProps, newState) {\r\n    //     console.log(newProps);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <AnalyzerResult corpCode={this.props.corpCode} />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\n// function getCorpDetail(dispatch, corpCode) {\r\n//     dispatch(requestCorpDetail());\r\n\r\n//     axios.get(ENDPOINTS + 'api/search/' + corpCode)\r\n//     .then(response => {\r\n//         dispatch(getSuccessedCorpDetail(response.data));\r\n//     }).catch(error => {\r\n//         console.log(error);\r\n//         dispatch(getFailedCorpDetail(error));\r\n//     }).finally(() => {\r\n//         dispatch(responseCorpDetail());\r\n//     });\r\n// }\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        corpCode : ownProps.match.params.corpCode\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Analyzer)","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\guide\\Guide.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\search\\Search.js",["153","154","155","156","157","158"],"import React        from 'react'\r\nimport { connect }  from 'react-redux'\r\nimport axios        from 'axios'\r\n\r\nimport { Grid }     from '@material-ui/core'\r\n\r\nimport SearchContent from './SearchContent'\r\nimport { ENDPOINTS } from '../../constants/Constants'\r\nimport { requestCorps, responseCorps, getSuccessedCorps, getFailedCorps } from '../../actions/CorpActions'\r\n\r\nclass Search extends React.Component {\r\n    render() {\r\n        return (\r\n            <Grid container>\r\n                <SearchContent />\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(Search)","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\actions\\UpdateActions.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\actions\\CorpDetailActions.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\nav\\NavUpdateTime.js",["159"],"import { Grid }  from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nimport { connect }  from 'react-redux'\r\n\r\nfunction NavUpdateTime(props) {\r\n    const updateingMessage      = '업데이트가 진행중입니다.';\r\n    const shouldUpdateMessage   = '업데이트를 진행해 주세요.';\r\n\r\n    const successedMessage      = props.updateTime.data.updateDate;\r\n    const failedMessage         = '업데이트에 실패하였습니다.';\r\n\r\n    let updateMessage           = undefined;\r\n\r\n    if (props.updating) {\r\n        updateMessage       = <Alert severity=\"warning\">{updateingMessage}</Alert>;\r\n    } else {\r\n        const status = props.updateTime.status;\r\n\r\n        if (status === '') {\r\n            updateMessage       = <Alert severity=\"info\">{shouldUpdateMessage}</Alert>;\r\n        } else if (status === 204) {\r\n            updateMessage       = <Alert severity=\"info\">{shouldUpdateMessage}</Alert>;\r\n        } else if (status === 200) {\r\n            const progress = props.updateTime.data.progress;\r\n\r\n            if (progress === 'updating') {\r\n                updateMessage = <Alert severity=\"warning\">{updateingMessage}</Alert>;\r\n            } else if (progress === 'success') {\r\n                updateMessage = <Alert severity=\"success\">업데이트 : {successedMessage}</Alert>;\r\n            } else {\r\n                updateMessage = <Alert severity=\"error\">{failedMessage}</Alert>;\r\n            }\r\n        } else {\r\n            updateMessage = <Alert severity=\"error\">{failedMessage}</Alert>;\r\n        }\r\n    }\r\n \r\n    // if (props.update.updating === true) {\r\n    //     updateMessage       = <Alert severity=\"warning\">{updateingMessage}</Alert>;\r\n    // } else if (Object.keys(props.updateTime).length < 1) {\r\n    //     updateMessage       = <Alert severity=\"info\">{shouldUpdateMessage}</Alert>;\r\n    // } else if (props.updateTime.progress === 'updating') {\r\n    //     updateMessage       = <Alert severity=\"warning\">{updateingMessage}</Alert>;\r\n    // } else {\r\n    //     if (props.updateTime.progress === 'success') {\r\n    //         updateMessage = <Alert severity=\"success\">업데이트 : {successedMessage}</Alert>;\r\n    //     } else {\r\n    //         updateMessage = <Alert severity=\"error\">{failedMessage}</Alert>;\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            {updateMessage}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default NavUpdateTime","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\actions\\CorpActions.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\nav\\NavItem.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\analyzer\\AnalyzerSearch.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\analyzer\\AnalyzerResult.js",["160","161"],"import React, { useEffect }   from 'react'\r\nimport axios        from 'axios'\r\nimport { connect }  from 'react-redux'\r\n\r\nimport { Grid }     from '@material-ui/core'\r\nimport { Alert }    from '@material-ui/lab'\r\n\r\nimport AnalyzerResultBarChart   from './AnalyzerResultBarChart'\r\nimport AnalyzerResultLineChart  from './AnalyzerResultLineChart'\r\nimport AnalyzerTable            from './AnalyzerTable';\r\n\r\nimport { analyzeThunk } from '../../slice/AnalyzeSlice'\r\n\r\nfunction AnalyzerResult(props) {\r\n    const { dispatch , corpCode }       = props;\r\n    const { analyzing, corpDetails }    = props.analyze;\r\n\r\n    useEffect(() => {\r\n        dispatch(analyzeThunk(corpCode));\r\n    },[corpCode]);\r\n\r\n    const resultingMessage      = '분석중입니다.';\r\n    const shouldResultMessage   = '분석해주세요.';\r\n\r\n    const successedMessage      = '분석되었습니다.';\r\n    const failedMessage         = '분석에 실패했습니다.';\r\n\r\n    let corpDetailMsg       = undefined;\r\n    let issueEvalDoneMsg    = undefined;\r\n    let incomeEvalDoneMsg   = undefined;\r\n\r\n    let isItems             = false;\r\n    if (analyzing) {\r\n        corpDetailMsg       = <Alert severity=\"warning\">재무제표 {resultingMessage}</Alert>;\r\n        issueEvalDoneMsg    = <Alert severity=\"warning\">관리종목 {resultingMessage}</Alert>;\r\n        incomeEvalDoneMsg   = <Alert severity=\"warning\">영업이익 {resultingMessage}</Alert>;\r\n    } else {\r\n        const status = corpDetails.status;\r\n\r\n        if (status === '') {\r\n            corpDetailMsg       = <Alert severity=\"info\">재무제표 {shouldResultMessage}</Alert>;\r\n            issueEvalDoneMsg    = <Alert severity=\"info\">관리종목 {shouldResultMessage}</Alert>;\r\n            incomeEvalDoneMsg   = <Alert severity=\"info\">영업이익 {shouldResultMessage}</Alert>;\r\n        } else if (status === 200) {\r\n            isItems             = true;\r\n            corpDetailMsg       = <Alert severity=\"success\">재무제표 {successedMessage}</Alert>;\r\n            \r\n            if (corpDetails.data.corp_evals.issue.is_eval_done) {\r\n                issueEvalDoneMsg = <Alert severity=\"success\">관리종목 {successedMessage}</Alert>;\r\n            } else {\r\n                issueEvalDoneMsg = <Alert severity=\"error\">관리종목 {failedMessage}</Alert>;\r\n            }\r\n\r\n            if (corpDetails.data.corp_evals.operatingIncomeGrowthRatio.is_eval_done) {\r\n                incomeEvalDoneMsg = <Alert severity=\"success\">영업이익 {successedMessage}</Alert>;\r\n            } else {\r\n                incomeEvalDoneMsg   = <Alert severity=\"error\">영업이익 {failedMessage}</Alert>;\r\n            }\r\n        } else {\r\n            corpDetailMsg       = <Alert severity=\"error\">재무제표 {failedMessage}</Alert>;\r\n            issueEvalDoneMsg    = <Alert severity=\"error\">관리종목 {failedMessage}</Alert>;\r\n            incomeEvalDoneMsg   = <Alert severity=\"error\">영업이익 {failedMessage}</Alert>;\r\n        }\r\n    }\r\n\r\n    let thstrmDts               = [];\r\n    let totLiabilitys           = [];\r\n    let totStockholdersEquitys  = [];\r\n    let stockholdersEquitys     = [];\r\n\r\n    let revenues                = [];\r\n    let operatingIncomes        = [];\r\n    let incomeBeforeTaxs        = [];\r\n    let netIncomes              = [];\r\n\r\n    let bar_chart_infos         = {};\r\n    let line_chart_infos        = {};\r\n    let tables_infos            = [];\r\n    let income_tables_infos     = [];\r\n\r\n    if (isItems) {\r\n        const corp_detail = corpDetails.data;\r\n\r\n        if (corp_detail.corp_details !== undefined) {\r\n            corp_detail.corp_details.map(corp_detail => {\r\n                thstrmDts.push(corp_detail.thstrm_dt);\r\n        \r\n                const tot_liability             = corp_detail.tot_liability != null ?\r\n                                                corp_detail.tot_liability.replace(/,/g, '') : '0';\r\n\r\n                const tot_stockholders_equity   = corp_detail.tot_stockholders_equity != null ?\r\n                                                corp_detail.tot_stockholders_equity.replace(/,/g, '') : '0';\r\n\r\n                const stockholders_equity       = corp_detail.stockholders_equity != null ?\r\n                                                corp_detail.stockholders_equity.replace(/,/g, '') : '0';\r\n\r\n                const revenue                   = corp_detail.revenue != null ?\r\n                                                corp_detail.revenue.replace(/,/g, '') : '0';\r\n\r\n                const operating_income          = corp_detail.operating_income != null ?\r\n                                                corp_detail.operating_income.replace(/,/g, '') : '0';\r\n\r\n                const income_before_tax         = corp_detail.income_before_tax != null ?\r\n                                                corp_detail.income_before_tax.replace(/,/g, '') : '0';\r\n\r\n                const net_income                = corp_detail.net_income != null ?\r\n                                                corp_detail.net_income.replace(/,/g, '') : '0';\r\n\r\n                totLiabilitys.push(parseInt(tot_liability));\r\n                totStockholdersEquitys.push(parseInt(tot_stockholders_equity));\r\n                stockholdersEquitys.push(parseInt(stockholders_equity));\r\n        \r\n                revenues.push(parseInt(revenue));\r\n                operatingIncomes.push(parseInt(operating_income));\r\n                incomeBeforeTaxs.push(parseInt(income_before_tax));\r\n                netIncomes.push(parseInt(net_income));\r\n        \r\n                return true;\r\n            });\r\n        }\r\n    \r\n        bar_chart_infos = {\r\n            labels      : thstrmDts ,\r\n            title       : corp_detail.corp_name + ' 재무상태표',\r\n            charts      : [{\r\n                label   : 'totLiability' ,\r\n                data    : totLiabilitys\r\n            }, {\r\n                label   : 'totEquity' ,\r\n                data    : totStockholdersEquitys\r\n            }]\r\n        };\r\n    \r\n        line_chart_infos = {\r\n            labels      : thstrmDts ,\r\n            title       : corp_detail.corp_name + ' 손익계산서',\r\n            charts      : [{\r\n                label   : 'Revenue' ,\r\n                data    : revenues\r\n            }, {\r\n                label   : 'OperatingIncome' ,\r\n                data    : operatingIncomes\r\n            }, {\r\n                label   : 'NetIncome' ,\r\n                data    : netIncomes\r\n            }]\r\n        };\r\n        \r\n        const revenue_table_infos = {\r\n            labels      : thstrmDts ,\r\n            title       : corp_detail.corp_name + ' 매출액 부족여부',\r\n            tables      : [{\r\n                label   : '매출액' ,\r\n                data    : revenues\r\n            }],\r\n            result      : corp_detail.corp_evals.issue.is_revenue_lack\r\n        };\r\n    \r\n        const impairment_table_infos = {\r\n            labels      : thstrmDts ,\r\n            title       : corp_detail.corp_name + ' 자본잠식 여부',\r\n            tables      : [{\r\n                label   : '자본총계' ,\r\n                data    : totStockholdersEquitys\r\n            }, {\r\n                label   : '자본금' ,\r\n                data    : stockholdersEquitys\r\n            }],\r\n            result      : corp_detail.corp_evals.issue.is_equity_impairment\r\n        };\r\n    \r\n        const operatingIncome_table_infos = {\r\n            labels      : thstrmDts ,\r\n            title       : corp_detail.corp_name + ' 4년연속 영업손실 여부',\r\n            tables      : [{\r\n                label   : '영업이익' ,\r\n                data    : operatingIncomes\r\n            }],\r\n            result      : corp_detail.corp_evals.issue.is_operating_loss\r\n        };\r\n    \r\n        const lossBeforeTax_table_infos = {\r\n            labels      : thstrmDts ,\r\n            title       : corp_detail.corp_name + ' 법인세차감전 순손실 여부',\r\n            tables      : [{\r\n                label   : '자본총계' ,\r\n                data    : totStockholdersEquitys\r\n            }, {\r\n                label   : '법인세차감전 순이익' ,\r\n                data    : incomeBeforeTaxs\r\n            }],\r\n            result      : corp_detail.corp_evals.issue.is_loss_before_tax\r\n        };\r\n    \r\n        tables_infos.push(revenue_table_infos);\r\n        tables_infos.push(impairment_table_infos);\r\n    \r\n        if (corp_detail.corp_cls === 'K') {\r\n            tables_infos.push(operatingIncome_table_infos);\r\n            tables_infos.push(lossBeforeTax_table_infos);\r\n        }\r\n\r\n        if (corp_detail.corp_evals.operatingIncomeGrowthRatio.is_eval_done) {\r\n            const isKeepOperatingIncomePositive             = corp_detail.corp_evals.operatingIncomeGrowthRatio.is_keep_operating_income_positive;\r\n            const isKeepOperatingIncomeGrowthRatioPositive  = corp_detail.corp_evals.operatingIncomeGrowthRatio.is_keep_operating_income_growth_ratio_positive;\r\n            const operatingIncomeGrowthRatio                = corp_detail.corp_evals.operatingIncomeGrowthRatio.operating_income_growth_ratio;\r\n\r\n            const operatingIncomeGrowthRatio_table_infos = {\r\n                labels : ['영업이익 매년 흑자여부', '영업이익 매년 성장여부', '영업이익 성장률'],\r\n                title : corp_detail.corp_name + ' 영업이익 성장률',\r\n                tables : [{\r\n                    data: [isKeepOperatingIncomePositive.toString(), isKeepOperatingIncomeGrowthRatioPositive.toString(), operatingIncomeGrowthRatio]\r\n                }]\r\n            }\r\n    \r\n            income_tables_infos.push(operatingIncomeGrowthRatio_table_infos);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n                {corpDetailMsg}\r\n            </Grid>\r\n            {Object.keys(bar_chart_infos).length <= 0 ? null : \r\n                <AnalyzerResultBarChart     chart_infos={bar_chart_infos} />\r\n            }\r\n            {Object.keys(line_chart_infos).length <= 0 ? null : \r\n                <AnalyzerResultLineChart    chart_infos={line_chart_infos} />\r\n            }\r\n            <Grid item xs={12}>\r\n                {issueEvalDoneMsg}\r\n            </Grid>\r\n            {tables_infos.map((table_info, index) => {\r\n                return <AnalyzerTable key={index} table_infos={table_info}/>\r\n            })}\r\n            <Grid item xs={12}>\r\n                {incomeEvalDoneMsg}\r\n            </Grid>\r\n            {income_tables_infos.map((table_info, index) => {\r\n                return <AnalyzerTable key={index} table_infos={table_info}/>\r\n            })}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        analyze     : state.analyze,\r\n        corpCode    : ownProps.corpCode\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AnalyzerResult)","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\search\\SearchContent.js",["162"],"import React, { useEffect }   from 'react'\r\nimport { connect }  from 'react-redux'\r\n\r\nimport { Grid, Input, FormControl, FormLabel, FormControlLabel, RadioGroup, Radio } from '@material-ui/core'\r\n\r\nimport SearchItem   from './SearchItem'\r\nimport SearchButton from './SearchButton'\r\nimport SearchResult from './SearchResult'\r\n\r\nimport { changeSearchParams, searchEvaluatesThunk, searchCorpClsesThunk, searchCorpInfosThunk } from '../../slice/SearchSlice'\r\n\r\nconst SearchContent = (props) => {\r\n    const { dispatch } = props;\r\n    const { searchParams, searchEvaluates, searchCorpClses } = props.search;\r\n\r\n    useEffect(() => {\r\n        dispatch(searchEvaluatesThunk());\r\n        dispatch(searchCorpClsesThunk());\r\n    }, [dispatch]);\r\n\r\n    // const contents  = [\r\n    //     {title : '검색어'   , type : 'text'},\r\n    //     {title : '상장종류' , type : 'radio', labels: ['코스피', '코스닥'], values : ['Y', 'K'], defaultValue : 1},\r\n    //     {title : '정렬종류' , type : 'radio', }\r\n    // ];\r\n\r\n    const onSubmitEvent = (event, props) => {\r\n        event.preventDefault();\r\n        dispatch(searchCorpInfosThunk(searchParams));\r\n        // props.getCorpInfos(\r\n        //       props.dispatch\r\n        //     , event.target['평가여부'].value\r\n        //     , event.target['이슈상태'].value\r\n        //     , event.target['상장종류'].value\r\n        //     , event.target['검색어'].value);\r\n    };\r\n\r\n    const onChangeCorpName = (event) => {\r\n        dispatch(changeSearchParams({ corpName: event.target.value }));\r\n    };\r\n\r\n    const onChangeCorpCls = (event) => {\r\n        dispatch(changeSearchParams({ corpCls: event.target.value }));\r\n    };\r\n\r\n    const onChangeSortByService = (event) => {\r\n        dispatch(changeSearchParams({ sortByService: event.target.value }));\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12} md={6}>\r\n                <form onSubmit={(event) => onSubmitEvent(event, props)}>\r\n                    <Grid container>\r\n                        {/* {searchContents.map((content, index) => {\r\n                            return <SearchItem key={index} />\r\n                        })} */}\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth margin=\"normal\">\r\n                                <FormLabel>검색어</FormLabel>\r\n                                <FormControlLabel name='검색어' control={<Input fullWidth size=\"small\" value={searchParams.corpName} onChange={onChangeCorpName} />}/>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth margin=\"normal\">\r\n                                <FormLabel>상장종류</FormLabel>\r\n                                <RadioGroup name='상장종류' row={true} value={searchParams.corpCls} onChange={onChangeCorpCls} >\r\n                                    {/* {values.map((value, index) => {\r\n                                        return <FormControlLabel key={index} label={value} value={value} control={<Radio />}/>\r\n                                    })} */}\r\n                                    {/* <FormControlLabel label='코스피' value={'Y'} control={<Radio />} />\r\n                                    <FormControlLabel label='코스닥' value={'K'} control={<Radio />} /> */}\r\n                                    {searchCorpClses.map((searchCorpCls, idx) => {\r\n                                        return <FormControlLabel key={idx} label={searchCorpCls} value={searchCorpCls} control={<Radio />} />\r\n                                    })}\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth margin=\"normal\">\r\n                                <FormLabel>정렬종류</FormLabel>\r\n                                <RadioGroup name='정렬종류' row={true} value={searchParams.sortByService} onChange={onChangeSortByService} >\r\n                                    {searchEvaluates.map((searchEvaluate, idx) => {\r\n                                        return <FormControlLabel key={idx} label={searchEvaluate.name} value={searchEvaluate.value} control={<Radio />} defaultChecked={idx === 0 ? true : false}/>\r\n                                    })}\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <SearchButton searching={props.searching} />\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <SearchResult {...props.search} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        search: state.search\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchContent)","C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\constants\\Constants.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\search\\SearchResult.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\analyzer\\AnalyzerResultLineChart.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\analyzer\\AnalyzerTable.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\analyzer\\AnalyzerResultBarChart.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\search\\SearchButton.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\search\\SearchItem.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\components\\search\\SearchResultItem.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\utils\\RandomRgba.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\slice\\SearchSlice.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\slice\\UpdateSlice.js",[],"C:\\Users\\miste\\Desktop\\Financial_Statement_Analyzer_FrontEnd\\src\\slice\\AnalyzeSlice.js",[],{"ruleId":"163","severity":1,"message":"164","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":21},{"ruleId":"163","severity":1,"message":"167","line":2,"column":23,"nodeType":"165","messageId":"166","endLine":2,"endColumn":38},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"163","severity":1,"message":"172","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":30},{"ruleId":"163","severity":1,"message":"173","line":3,"column":32,"nodeType":"165","messageId":"166","endLine":3,"endColumn":41},{"ruleId":"163","severity":1,"message":"174","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":31},{"ruleId":"163","severity":1,"message":"175","line":4,"column":33,"nodeType":"165","messageId":"166","endLine":4,"endColumn":43},{"ruleId":"163","severity":1,"message":"176","line":5,"column":10,"nodeType":"165","messageId":"166","endLine":5,"endColumn":27},{"ruleId":"163","severity":1,"message":"177","line":5,"column":29,"nodeType":"165","messageId":"166","endLine":5,"endColumn":39},{"ruleId":"163","severity":1,"message":"178","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":13},{"ruleId":"163","severity":1,"message":"179","line":7,"column":10,"nodeType":"165","messageId":"166","endLine":7,"endColumn":19},{"ruleId":"163","severity":1,"message":"180","line":8,"column":10,"nodeType":"165","messageId":"166","endLine":8,"endColumn":23},{"ruleId":"163","severity":1,"message":"181","line":8,"column":25,"nodeType":"165","messageId":"166","endLine":8,"endColumn":39},{"ruleId":"163","severity":1,"message":"182","line":8,"column":41,"nodeType":"165","messageId":"166","endLine":8,"endColumn":59},{"ruleId":"163","severity":1,"message":"183","line":8,"column":61,"nodeType":"165","messageId":"166","endLine":8,"endColumn":76},{"ruleId":"163","severity":1,"message":"178","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":13},{"ruleId":"163","severity":1,"message":"179","line":7,"column":10,"nodeType":"165","messageId":"166","endLine":7,"endColumn":19},{"ruleId":"163","severity":1,"message":"184","line":8,"column":10,"nodeType":"165","messageId":"166","endLine":8,"endColumn":27},{"ruleId":"163","severity":1,"message":"185","line":8,"column":29,"nodeType":"165","messageId":"166","endLine":8,"endColumn":47},{"ruleId":"163","severity":1,"message":"186","line":8,"column":49,"nodeType":"165","messageId":"166","endLine":8,"endColumn":71},{"ruleId":"163","severity":1,"message":"187","line":8,"column":73,"nodeType":"165","messageId":"166","endLine":8,"endColumn":92},{"ruleId":"163","severity":1,"message":"178","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":13},{"ruleId":"163","severity":1,"message":"179","line":8,"column":10,"nodeType":"165","messageId":"166","endLine":8,"endColumn":19},{"ruleId":"163","severity":1,"message":"188","line":9,"column":10,"nodeType":"165","messageId":"166","endLine":9,"endColumn":22},{"ruleId":"163","severity":1,"message":"189","line":9,"column":24,"nodeType":"165","messageId":"166","endLine":9,"endColumn":37},{"ruleId":"163","severity":1,"message":"190","line":9,"column":39,"nodeType":"165","messageId":"166","endLine":9,"endColumn":56},{"ruleId":"163","severity":1,"message":"191","line":9,"column":58,"nodeType":"165","messageId":"166","endLine":9,"endColumn":72},{"ruleId":"163","severity":1,"message":"192","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":17},{"ruleId":"163","severity":1,"message":"178","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":13},{"ruleId":"193","severity":1,"message":"194","line":20,"column":7,"nodeType":"195","endLine":20,"endColumn":17,"suggestions":"196"},{"ruleId":"163","severity":1,"message":"197","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":18},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'applyMiddleware' is defined but never used.","no-native-reassign",["198"],"no-negated-in-lhs",["199"],"'isCorpInfosRequested' is defined but never used.","'corpInfos' is defined but never used.","'isCorpDetailRequested' is defined but never used.","'corpDetail' is defined but never used.","'isUpdateRequested' is defined but never used.","'updateTime' is defined but never used.","'axios' is defined but never used.","'ENDPOINTS' is defined but never used.","'requestUpdate' is defined but never used.","'responseUpdate' is defined but never used.","'getSuccessedUpdate' is defined but never used.","'getFailedUpdate' is defined but never used.","'requestCorpDetail' is defined but never used.","'responseCorpDetail' is defined but never used.","'getSuccessedCorpDetail' is defined but never used.","'getFailedCorpDetail' is defined but never used.","'requestCorps' is defined but never used.","'responseCorps' is defined but never used.","'getSuccessedCorps' is defined but never used.","'getFailedCorps' is defined but never used.","'connect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["200"],"'SearchItem' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},"Update the dependencies array to be: [corpCode, dispatch]",{"range":"203","text":"204"},[678,688],"[corpCode, dispatch]"]